[{"botproperty": "allowpanelusertosetup", "definition": "if `true`, the panel login can access the setup page; else only the random token. default `true`", "type": "Boolean", "sort": 20, "category": "Admin", "category_sort": 10, "restart": false}, {"botproperty": "backupdbauto", "definition": "if `true`, the database is backed up to the ./backups folder every so often. default `true`", "type": "Boolean", "sort": 400, "category": "Datastore", "category_sort": 30, "restart": false}, {"botproperty": "backupdbhourfrequency", "definition": "the number of hours between db backups, if enabled. default `24`", "type": "Int", "sort": 420, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "backupdbkeepdays", "definition": "the number of days before a db backup is deleted. default `5`", "type": "Int", "sort": 410, "category": "Datastore", "category_sort": 30, "restart": false}, {"botproperty": "baseport", "definition": "the port the bots webserver runs on. default `25000`", "type": "Int", "sort": 20, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "bindip", "definition": "the ip address the bots webserver runs on. default all", "type": "String", "sort": 200, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "channel", "definition": "the twitch channel the bot will operate in", "type": "String", "sort": 30, "category": "Admin", "category_sort": 10, "restart": true}, {"botproperty": "clientid", "definition": "the twitch developer application client id", "type": "String", "sort": 20, "category": "Twitch", "category_sort": 20, "restart": false}, {"botproperty": "clientsecret", "definition": "the twitch developer application client secret", "type": "String", "sort": 30, "category": "Twitch", "category_sort": 20, "restart": false}, {"botproperty": "commandprefix", "definition": "No definition", "type": "Char", "sort": 9999, "category": "Uncategorized", "category_sort": 9999, "restart": false}, {"botproperty": "datastore", "definition": "the type of db to use. valid values: `sqlite3store`, `mysqlstore`, `h2store`. default `h2store`", "type": "String", "sort": 10, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "datastoreconfig", "definition": "if set, h2store: overrides the db file name; sqlitestore: links to a file containing config overrides", "type": "String", "sort": 900, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "debuglog", "definition": "if `true`, debug output is sent to log only, not the console. default `false`", "type": "Boolean", "sort": 20, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "debugon", "definition": "if `true`, enables debug output. default `false`", "type": "Boolean", "sort": 10, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "discord_restore_presence", "definition": "if `true`, the bots current discord activity (_playing foo_) is restored on startup. default `true`", "type": "Boolean", "sort": 50, "category": "Discord", "category_sort": 200, "restart": false}, {"botproperty": "discord_token", "definition": "the bot token from the discord developer portal", "type": "String", "sort": 10, "category": "Discord", "category_sort": 200, "restart": true}, {"botproperty": "discordcommandprefix", "definition": "No definition", "type": "Char", "sort": 9999, "category": "Uncategorized", "category_sort": 9999, "restart": false}, {"botproperty": "dnsdebug", "definition": "if `true`, prints debugging info about dns resolution to the debug log. default `false`", "type": "Boolean", "sort": 800, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "eventsubcallbackurl", "definition": "the url which will receive eventsub notifications", "type": "String", "sort": 9999, "category": "Uncategorized", "category_sort": 9999, "restart": false}, {"botproperty": "eventsubdebug", "definition": "if `true`, prints debug messages for eventsub. default `false`", "type": "Boolean", "sort": 750, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "helixdebug", "definition": "if `true`, debugging info for twitch helix api requests are sent to the debug log. default `false`", "type": "Boolean", "sort": 100, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "httpclientdebug", "definition": "if `true`, information about each http request sent by httpclient is sent to the debug log. default `false`", "type": "Boolean", "sort": 800, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "httpclienttimeout", "definition": "the timeout, in seconds, for an http request to complete. default `10`", "type": "Int", "sort": 100, "category": "HTTP/WS", "category_sort": 700, "restart": false}, {"botproperty": "httpsfilename", "definition": "if httpskeyfilename is unset/blank, a jks containing the certificate; else, an x509 certificate in pem format", "type": "String", "sort": 40, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "httpskeyfilename", "definition": "the pkcs#8 private key in pem format for httpsfilename; if unset/blank, httpsfilename is loaded as a jks", "type": "String", "sort": 50, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "httpspassword", "definition": "the password, if any, to _httpsfilename_", "type": "String", "sort": 60, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "internaldebug", "definition": "if `true`, internal debugging from jdk and other libraries are sent to the console. default `false`", "type": "Boolean", "sort": 500, "category": "Debug", "category_sort": 900, "restart": true}, {"botproperty": "ircdebug", "definition": "if `true`, raw inbound and outbound irc commands (except pass) are sent to the debug log. default `false`", "type": "Boolean", "sort": 60, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "logtimezone", "definition": "the timezone for timestamps in the log. must be a valid iana time zone database name. default `gmt`", "type": "String", "sort": 60, "category": "Misc", "category_sort": 50, "restart": false}, {"botproperty": "musicenable", "definition": "if `true`, enables the websocket handler for the song request/youtube player. default `true`", "type": "Boolean", "sort": 500, "category": "Misc", "category_sort": 50, "restart": true}, {"botproperty": "mysqlhost", "definition": "the ip, domain name, or hostname of the mysql server", "type": "String", "sort": 200, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "mysqlname", "definition": "the schema where the tables for the bot will be created/located on the mysql server", "type": "String", "sort": 220, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "mysqlpass", "definition": "the password for `mysqluser`", "type": "String", "sort": 240, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "mysqlport", "definition": "the port to use for mysql connections. default `3306`", "type": "String", "sort": 210, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "mysqluser", "definition": "the username to login as to the mysql server", "type": "String", "sort": 230, "category": "Datastore", "category_sort": 30, "restart": true}, {"botproperty": "offlinedelay", "definition": "the delay, in seconds, before the `channel` is confirmed to be offline. default `30`", "type": "Int", "sort": 200, "category": "Twitch", "category_sort": 20, "restart": false}, {"botproperty": "offlinetimeout", "definition": "the timeout, in seconds, after `channel` goes offline before it can be online. default `300`", "type": "Int", "sort": 210, "category": "Twitch", "category_sort": 20, "restart": false}, {"botproperty": "owner", "definition": "the name of the bot owner, who has administrator privileges to the bot", "type": "String", "sort": 40, "category": "Admin", "category_sort": 10, "restart": true}, {"botproperty": "panelpassword", "definition": "the password to login to the panel. default is a randomly generated password", "type": "String", "sort": 30, "category": "Panel Login", "category_sort": 40, "restart": false}, {"botproperty": "paneluser", "definition": "the username to login to the panel. default `panel`", "type": "String", "sort": 20, "category": "Panel Login", "category_sort": 40, "restart": false}, {"botproperty": "pathvalidatedebug", "definition": "if `true`, prints debug information for the path validator to the debug log. default `false`", "type": "Boolean", "sort": 900, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "proxybypasshttps", "definition": "if `true`, the http server reports ssl is enabled, even if `usessl` is `false`. default `false`", "type": "Boolean", "sort": 80, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "reactordebug", "definition": "if `true`, internal debugging for reactor http and ws processing is sent to the console. default `false`", "type": "Boolean", "sort": 300, "category": "Debug", "category_sort": 900, "restart": true}, {"botproperty": "reloadscripts", "definition": "if `true`, scripts which are changed while the bot is running will be reloaded. default `false`", "type": "Boolean", "sort": 150, "category": "Misc", "category_sort": 50, "restart": true}, {"botproperty": "restartcmd", "definition": "a command that can be used to restart the bot, if it is running as a service", "type": "String", "sort": 50, "category": "Misc", "category_sort": 50, "restart": false}, {"botproperty": "rhinodebugger", "definition": "if `true`, enables the rhino debugger console. default `false`", "type": "Boolean", "sort": 1000, "category": "Debug", "category_sort": 900, "restart": true}, {"botproperty": "silentscriptsload", "definition": "if `true`, the script loading messages during startup are suppressed. default `false`", "type": "Boolean", "sort": 200, "category": "Misc", "category_sort": 50, "restart": true}, {"botproperty": "streamelementsid", "definition": "the user id for retrieving donations from streamelements", "type": "String", "sort": 10, "category": "StreamElements", "category_sort": 210, "restart": true}, {"botproperty": "streamelementsjwt", "definition": "the jwt token for retrieving donations from streamelements", "type": "String", "sort": 20, "category": "StreamElements", "category_sort": 210, "restart": true}, {"botproperty": "streamelementslimit", "definition": "the maximum number of donations to pull from streamelements when updating. default `5`", "type": "Int", "sort": 30, "category": "StreamElements", "category_sort": 210, "restart": true}, {"botproperty": "tipeeestreamkey", "definition": "the access token for retrieving donations from tipeeestream", "type": "String", "sort": 20, "category": "TipeeeStream", "category_sort": 220, "restart": true}, {"botproperty": "tipeeestreamlimit", "definition": "the maximum number of donations to pull from tipeeestream when updating. default `5`", "type": "Int", "sort": 30, "category": "TipeeeStream", "category_sort": 220, "restart": false}, {"botproperty": "twitchalertskey", "definition": "the access token for retrieving donations from streamlabs", "type": "String", "sort": 20, "category": "StreamLabs", "category_sort": 260, "restart": true}, {"botproperty": "twitchalertslimit", "definition": "the maximum number of donations to pull from streamlabs when updating. default `5`", "type": "Int", "sort": 30, "category": "StreamLabs", "category_sort": 260, "restart": true}, {"botproperty": "usebroadcasterforchatcommands", "definition": "if `true`, certain redirected chat commands are sent as the broadcaster. default `false`", "type": "Boolean", "sort": 800, "category": "Twitch", "category_sort": 20, "restart": false}, {"botproperty": "usedefaultdnsresolver", "definition": "if `true`, only the default java/system dns resolver is used. default `false`", "type": "Boolean", "sort": 10, "category": "HTTP/WS", "category_sort": 700, "restart": false}, {"botproperty": "usehttps", "definition": "if `true`, the bots webserver uses https to secure the connection. default `true`", "type": "Boolean", "sort": 30, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "userollbar", "definition": "if `true`, exceptions thrown during operation may be sent to rollbar exception tracking. default `true`", "type": "Boolean", "sort": 10, "category": "Admin", "category_sort": 10, "restart": true}, {"botproperty": "webenable", "definition": "if `true`, the bots webserver is started. default `true`", "type": "Boolean", "sort": 300, "category": "HTTP/WS", "category_sort": 700, "restart": true}, {"botproperty": "wsdebug", "definition": "if `true`, information about inbound ws frames for the panel are sent to the debug log. default `false`", "type": "Boolean", "sort": 200, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "wspingerdebug", "definition": "if `true`, prints debug messages for active wspinger instances. default `false`", "type": "Boolean", "sort": 700, "category": "Debug", "category_sort": 900, "restart": false}, {"botproperty": "youtubekey", "definition": "the access token for youtube apiv3", "type": "String", "sort": 10, "category": "YouTube", "category_sort": 230, "restart": true}]