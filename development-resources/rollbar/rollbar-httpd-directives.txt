# It is strongly recommended to add the following directive block into the Apache httpd directives for rollbar.php
# Place this block inside the <VirtualHost><Directory> tags for the directory containing the website files
# This block rate-limits inbound requests to 5 per 2.5 minutes per IP address
# ModSecurity and mod_rewrite are required for this
        <Files "rollbar.php">
            # Init vars and grab the IP
            SecAction id:1,initcol:ip=%{REMOTE_ADDR},pass,nolog
            # Reduce ratelimit-used by 1 every 30 seconds, until hitting 0
            SecAction "id:2,phase:5,deprecatevar:ip.rollbarlimit=1/30,pass,nolog"
            # If ratelimit-used > 5, deny with HTTP 429, set temporary environment variable RATELIMITED, and skip the next directive
            SecRule IP:ROLLBARLIMIT "@gt 5" "id:3,phase:2,deny,status:429,setenv:RATELIMITED=true,skip:1,nolog"
            # Add 1 to ratelimit-used
            SecAction "id:4,phase:2,pass,setvar:ip.rollbarlimit=+1,nolog"
            # If RATELIMITED is set true, set header hinting to client to wait at least 1- seconds before trying again
            Header always set Retry-After "10" env=RATELIMITED
            # Enable rewrite-engine
            RewriteEngine on
            # Condition: RATELIMITED is set true
            RewriteCond %{ENV:RATELIMITED} =true
            # Condition matches: Serve 429.txt instead, don't process anymore Rewrite directives after this
            RewriteRule ^/rollbar.php(.*) /429.txt [L]
        </Files>


# Add this to the bottom of the <VirtualHost> tag to log which filter fired in the access_log (No filter means ModSecurity rate-limiting or not rollbar.php)
# If value in parenthesis is "rb", the item was submitted to Rollbar and the HTTP code listed in the log is the result
    LogFormat "%h %l %u %t %v:%p \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" (%{RBResp}n)" rollbar
    CustomLog logs/access_log rollbar

# Also create a file called "429.txt" with the contents of the following line
{"err":1,"message":"too many requests"}

# Make sure to reload httpd



# Optional Fail2Ban Configuration to block users sending DDoS levels of traffic
# Only identifies and bans users who are receiving rate-limit 429 response and not respecting it
# Requires the custom LogFormat above

# Create file /etc/fail2ban/filter.d/apache-rollbar.conf
# Fail2Ban Apache rollbar

[INCLUDES]

before = apache-common.conf

[Definition]

failregex = ^<HOST> .* \[\] .* ".* HTTP/1\.[01]" 429 \d+ ".*" ".*" (.*)$

ignoreregex =



# Add following lines to /etc/fail2ban/jail.local
# Change enabled to true on the rules you want to enable
# Edit rules to your liking

# Drops all http connections from anyone making 60 requests per 2.5 minutes and getting 429 rate-limit for 25 minutes
[apache-rollbar-short]
enabled = true
filter = apache-rollbar
banaction = iptables-multiport
port = http,https
protocol = tcp
logpath = /var/log/httpd/access_log
maxretry = 60
findtime = 150
bantime = 1500

# Drops all http connections from anyone making 104 requests per 2.5 minutes and getting 429 rate-limit for 1 day (after their short ban expires)
[apache-rollbar-long]
enabled = true
filter = apache-rollbar
banaction = iptables-multiport
port = http,https
protocol = tcp
logpath = /var/log/httpd/access_log
maxretry = 2500
findtime = 3600
bantime = 86400

# Make sure to reload fail2ban
